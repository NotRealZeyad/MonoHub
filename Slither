-- Local Script to make the player look like a worm

-- Function to convert the player into a worm
local function makeWorm(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")
    
    -- Making all parts of the character grey
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.BrickColor = BrickColor.new("Dark stone grey")
        end
    end

    -- Removing unnecessary limbs
    for _, partName in ipairs({"Left Arm", "Right Arm", "Left Leg", "Right Leg"}) do
        local limb = character:FindFirstChild(partName)
        if limb then
            limb:Destroy()
        end
    end

    -- Aligning body parts to form a worm shape
    local bodyParts = {character.Head, character.UpperTorso, character.LowerTorso}
    local prevPart = rootPart

    for i, part in ipairs(bodyParts) do
        if i > 1 then
            local attachment0 = Instance.new("Attachment", prevPart)
            attachment0.Position = Vector3.new(0, -1, 0)
            local attachment1 = Instance.new("Attachment", part)
            attachment1.Position = Vector3.new(0, 1, 0)
            local alignPosition = Instance.new("AlignPosition", part)
            alignPosition.Attachment0 = attachment0
            alignPosition.Attachment1 = attachment1
            alignPosition.RigidityEnabled = true
            prevPart = part
        end
    end
end

-- Function to enable worm-like movement
local function enableWormMovement(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    -- Make the player slither
    humanoid.WalkSpeed = 16 -- Adjust as necessary
    humanoid.JumpPower = 0 -- Prevent jumping for worm-like movement

    -- Sine wave for smooth slithering effect
    local sine = 0
    game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
        sine = sine + deltaTime * 5
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            rootPart.CFrame = rootPart.CFrame * CFrame.Angles(0, math.sin(sine) * 0.1, 0)
        end
    end)
end

-- Main function to run the script
local function init()
    local player = game.Players.LocalPlayer

    player.CharacterAdded:Connect(function(character)
        makeWorm(player)
        enableWormMovement(player)
    end)

    if player.Character then
        makeWorm(player)
        enableWormMovement(player)
    end
end

-- Run the script
init()
