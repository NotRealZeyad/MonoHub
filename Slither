-- Local Script to make the player look like a worm

local function makeWorm(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")
    
    -- Making all parts of the character grey
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.BrickColor = BrickColor.new("Dark stone grey")
        end
    end

    -- Aligning body parts to form a worm shape
    local bodyParts = {}
    for _, partName in ipairs({"Head", "UpperTorso", "LowerTorso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"}) do
        local part = character:FindFirstChild(partName)
        if part then
            table.insert(bodyParts, part)
            part.Massless = true -- Make parts massless for easier alignment
        end
    end

    -- Function to create attachments and alignments between parts
    local function alignParts(part0, part1)
        local attachment0 = Instance.new("Attachment", part0)
        local attachment1 = Instance.new("Attachment", part1)
        local alignPosition = Instance.new("AlignPosition", part1)
        alignPosition.Attachment0 = attachment0
        alignPosition.Attachment1 = attachment1
        alignPosition.RigidityEnabled = true
        alignPosition.Responsiveness = 50
        alignPosition.MaxForce = 5000
        local alignOrientation = Instance.new("AlignOrientation", part1)
        alignOrientation.Attachment0 = attachment0
        alignOrientation.Attachment1 = attachment1
        alignOrientation.RigidityEnabled = true
        alignOrientation.Responsiveness = 50
        alignOrientation.MaxTorque = 5000
    end

    -- Aligning each part in a chain
    for i = 1, #bodyParts - 1 do
        alignParts(bodyParts[i], bodyParts[i + 1])
    end

    -- Hiding arms and legs to only show torso and head in the worm-like body
    for _, partName in ipairs({"Left Arm", "Right Arm", "Left Leg", "Right Leg"}) do
        local limb = character:FindFirstChild(partName)
        if limb then
            limb.Transparency = 1 -- Hide the limbs
        end
    end
end

-- Function to enable worm-like movement
local function enableWormMovement(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    -- Make the player slither
    humanoid.WalkSpeed = 16 -- Adjust as necessary
    humanoid.JumpPower = 0 -- Prevent jumping for worm-like movement

    -- Sine wave for smooth slithering effect
    local sine = 0
    game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
        sine = sine + deltaTime * 5
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            rootPart.CFrame = rootPart.CFrame * CFrame.Angles(0, math.sin(sine) * 0.1, 0)
        end
    end)
end

-- Main function to run the script
local function init()
    local player = game.Players.LocalPlayer

    player.CharacterAdded:Connect(function(character)
        makeWorm(player)
        enableWormMovement(player)
    end)

    if player.Character then
        makeWorm(player)
        enableWormMovement(player)
    end
end

-- Run the script
init()
